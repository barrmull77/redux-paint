{"ast":null,"code":"import { BEGIN_STROKE, UPDATE_STROKE, SET_STROKE_COLOR, END_STROKE } from \"../../actions\";\nconst initialState = {\n  points: [],\n  color: \"#000\"\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case BEGIN_STROKE:\n      {\n        return { ...state,\n          points: [action.payload]\n        };\n      }\n\n    case UPDATE_STROKE:\n      {\n        return { ...state,\n          points: [...state.points, action.payload]\n        };\n      }\n\n    case SET_STROKE_COLOR:\n      {\n        return { ...state,\n          color: action.payload\n        };\n      }\n\n    case END_STROKE:\n      {\n        return { ...state,\n          points: []\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/user/Documents/code-projects/redux-paint/src/modules/currentStroke/reducer.ts"],"names":["BEGIN_STROKE","UPDATE_STROKE","SET_STROKE_COLOR","END_STROKE","initialState","points","color","reducer","state","action","type","payload"],"mappings":"AACA,SAEEA,YAFF,EAGEC,aAHF,EAIEC,gBAJF,EAKEC,UALF,QAMO,eANP;AAQA,MAAMC,YAAwC,GAAG;AAC/CC,EAAAA,MAAM,EAAE,EADuC;AAE/CC,EAAAA,KAAK,EAAE;AAFwC,CAAjD;AAKA,OAAO,MAAMC,OAAO,GAAG,CACrBC,KAAiC,GAAGJ,YADf,EAErBK,MAFqB,KAGlB;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,YAAL;AAAmB;AACjB,eAAO,EAAE,GAAGQ,KAAL;AAAYH,UAAAA,MAAM,EAAE,CAACI,MAAM,CAACE,OAAR;AAApB,SAAP;AACD;;AACD,SAAKV,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGO,KADE;AAELH,UAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkBI,MAAM,CAACE,OAAzB;AAFH,SAAP;AAID;;AACD,SAAKT,gBAAL;AAAuB;AACrB,eAAO,EACL,GAAGM,KADE;AAELF,UAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,SAAP;AAID;;AACD,SAAKR,UAAL;AAAiB;AACf,eAAO,EACL,GAAGK,KADE;AAELH,UAAAA,MAAM,EAAE;AAFH,SAAP;AAID;;AACD;AACE,aAAOG,KAAP;AAvBJ;AAyBD,CA7BM","sourcesContent":["import { RootState } from \"../../types\"\nimport {\n  Action,\n  BEGIN_STROKE,\n  UPDATE_STROKE,\n  SET_STROKE_COLOR,\n  END_STROKE\n} from \"../../actions\"\n\nconst initialState: RootState[\"currentStroke\"] = {\n  points: [],\n  color: \"#000\"\n}\n\nexport const reducer = (\n  state: RootState[\"currentStroke\"] = initialState,\n  action: Action\n) => {\n  switch (action.type) {\n    case BEGIN_STROKE: {\n      return { ...state, points: [action.payload] }\n    }\n    case UPDATE_STROKE: {\n      return {\n        ...state,\n        points: [...state.points, action.payload]\n      }\n    }\n    case SET_STROKE_COLOR: {\n      return {\n        ...state,\n        color: action.payload\n      }\n    }\n    case END_STROKE: {\n      return {\n        ...state,\n        points: []\n      }\n    }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}