[{"/Users/user/Documents/code-projects/redux-paint/src/App.tsx":"1","/Users/user/Documents/code-projects/redux-paint/src/index.tsx":"2","/Users/user/Documents/code-projects/redux-paint/src/rootReducer.ts":"3","/Users/user/Documents/code-projects/redux-paint/src/store.ts":"4","/Users/user/Documents/code-projects/redux-paint/src/actions.ts":"5","/Users/user/Documents/code-projects/redux-paint/src/serviceWorker.ts":"6","/Users/user/Documents/code-projects/redux-paint/src/ColorPanel.tsx":"7","/Users/user/Documents/code-projects/redux-paint/src/canvasUtils.ts":"8","/Users/user/Documents/code-projects/redux-paint/src/modules/currentStroke/actions.ts":"9","/Users/user/Documents/code-projects/redux-paint/src/modules/historyIndex/reducer.ts":"10","/Users/user/Documents/code-projects/redux-paint/src/modules/currentStroke/reducer.ts":"11"},{"size":3160,"mtime":1611579703349,"results":"12","hashOfConfig":"13"},{"size":619,"mtime":1611400536929,"results":"14","hashOfConfig":"15"},{"size":1302,"mtime":1611572556673,"results":"16","hashOfConfig":"13"},{"size":521,"mtime":1611580658706,"results":"17","hashOfConfig":"13"},{"size":199,"mtime":1611573249920,"results":"18","hashOfConfig":"13"},{"size":5295,"mtime":1606852148000,"results":"19","hashOfConfig":"13"},{"size":1141,"mtime":1606852148000,"results":"20","hashOfConfig":"13"},{"size":885,"mtime":1611571147174,"results":"21","hashOfConfig":"13"},{"size":1006,"mtime":1606852148000,"results":"22","hashOfConfig":"13"},{"size":475,"mtime":1606852148000,"results":"23","hashOfConfig":"13"},{"size":795,"mtime":1606852148000,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"1bbgtvq",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xch2rw",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Documents/code-projects/redux-paint/src/App.tsx",["48","49","50","51","52","53","54"],"import React, { useRef, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { beginStroke, endStroke, updateStroke } from \"./actions\"\nimport { RootState } from \"./types\"\nimport { drawStroke, clearCanvas, setCanvasSize } from \"./canvasUtils\"\nimport { ColorPanel } from \"./ColorPanel\"\nimport { EditPanel } from \"./EditPanel\"\nimport { currentStrokeSelector } from \"./modules/currentStroke/selectors\"\nimport { strokesSelector } from \"./modules/strokes/selectors\"\nimport { historyIndexSelector } from \"./modules/historyIndex/selectors\"\nimport { beginStroke, updateStroke, endStroke } from \"./modules/currentStroke/actions\"\n\nconst WIDTH = 1024\nconst HEIGHT = 768\n\nfunction App() {\n  const dispatch = useDispatch()\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const isDrawing = useSelector<RootState>(\n    (state) => !!state.currentStroke.points.length\n  )\n\n  const strokes = useSelector<RootState, RootState[\"strokes\"]>(\n    (state: RootState) => state.strokes\n  )\n\n  const currentStroke = useSelector<RootState, RootState[\"currentStroke\"]>(\n    (state: RootState) => state.currentStroke\n  )\n\n  const getCanvasWithContext = (canvas = canvasRef.current) => {\n    return { canvas, context: canvas?.getContext(\"2d\") }\n  }\n\n  const startDrawing = ({\n    nativeEvent\n  }: React.MouseEvent<HTMLCanvasElement>) => {\n    const { offsetX, offsetY } = nativeEvent\n    dispatch(beginStroke(offsetX, offsetY))\n  }\n\n  useEffect(() => {\n    const { context } = getCanvasWithContext()\n    if (!context) {\n      return\n    }\n    requestAnimationFrame(() =>\n      drawStroke(context, currentStroke.points, currentStroke.color)\n    )\n  }, [currentStroke])\n\n  const endDrawing = () => {\n    if (isDrawing) {\n      dispatch(endStroke())\n    }\n  }\n\n  const draw = ({\n    nativeEvent\n  }: React.MouseEvent<HTMLCanvasElement>) => {\n    if (!isDrawing) {\n      return\n    }\n    const { offsetX, offsetY } = nativeEvent\n\n    dispatch(updateStroke(offsetX, offsetY))\n  }\n\n  useEffect(() => {\n    const { canvas, context } = getCanvasWithContext()\n    if (!canvas || !context) {\n      return\n    }\n\n    setCanvasSize(canvas, WIDTH, HEIGHT)\n\n    context.lineJoin = \"round\"\n    context.lineCap = \"round\"\n    context.lineWidth = 5\n    context.strokeStyle = \"black\"\n\n    clearCanvas(canvas)\n  }, [])\n\n  useEffect(() => {\n    const { canvas, context } = getCanvasWithContext()\n    if (!context || !canvas) {\n      return\n    }\n    requestAnimationFrame(() => {\n      clearCanvas(canvas)\n\n      strokes.slice(0, strokes.length - historyIndex).forEach((stroke) => {\n        drawStroke(context, stroke.points, stroke.color)\n      })\n    })\n  }, [historyIndex])\n\n  return (\n    <div className=\"window\">\n      <div className=\"title-bar\">\n        <div className=\"title-bar-text\">Redux Paint</div>\n        <div className=\"title-bar-controls\">\n          <button aria-label=\"Close\" />\n        </div>\n      </div>\n      <EditPanel />\n      <ColorPanel />\n      <canvas\n        onMouseDown={startDrawing}\n        onMouseUp={endDrawing}\n        onMouseOut={endDrawing}\n        onMouseMove={draw}\n        ref={canvasRef}\n      />\n    </div>\n  )\n}\n\nexport default App\n","/Users/user/Documents/code-projects/redux-paint/src/index.tsx",["55"],"/Users/user/Documents/code-projects/redux-paint/src/rootReducer.ts",[],"/Users/user/Documents/code-projects/redux-paint/src/store.ts",[],"/Users/user/Documents/code-projects/redux-paint/src/actions.ts",["56"],"/Users/user/Documents/code-projects/redux-paint/src/serviceWorker.ts",[],"/Users/user/Documents/code-projects/redux-paint/src/ColorPanel.tsx",[],"/Users/user/Documents/code-projects/redux-paint/src/canvasUtils.ts",[],"/Users/user/Documents/code-projects/redux-paint/src/modules/currentStroke/actions.ts",[],"/Users/user/Documents/code-projects/redux-paint/src/modules/historyIndex/reducer.ts",[],"/Users/user/Documents/code-projects/redux-paint/src/modules/currentStroke/reducer.ts",[],{"ruleId":"57","severity":1,"message":"58","line":8,"column":10,"nodeType":"59","messageId":"60","endLine":8,"endColumn":31},{"ruleId":"57","severity":1,"message":"61","line":9,"column":10,"nodeType":"59","messageId":"60","endLine":9,"endColumn":25},{"ruleId":"57","severity":1,"message":"62","line":10,"column":10,"nodeType":"59","messageId":"60","endLine":10,"endColumn":30},{"ruleId":"63","severity":1,"message":"64","line":11,"column":10,"nodeType":"59","messageId":"65","endLine":11,"endColumn":21},{"ruleId":"63","severity":1,"message":"66","line":11,"column":23,"nodeType":"59","messageId":"65","endLine":11,"endColumn":35},{"ruleId":"63","severity":1,"message":"67","line":11,"column":37,"nodeType":"59","messageId":"65","endLine":11,"endColumn":46},{"ruleId":"68","severity":1,"message":"69","line":97,"column":6,"nodeType":"70","endLine":97,"endColumn":20,"suggestions":"71"},{"ruleId":"57","severity":1,"message":"72","line":6,"column":13,"nodeType":"59","messageId":"60","endLine":6,"endColumn":26},{"ruleId":"57","severity":1,"message":"73","line":1,"column":10,"nodeType":"59","messageId":"60","endLine":1,"endColumn":15},"@typescript-eslint/no-unused-vars","'currentStrokeSelector' is defined but never used.","Identifier","unusedVar","'strokesSelector' is defined but never used.","'historyIndexSelector' is defined but never used.","@typescript-eslint/no-redeclare","'beginStroke' is already defined.","redeclared","'updateStroke' is already defined.","'endStroke' is already defined.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'strokes'. Either include it or remove the dependency array. Outer scope values like 'historyIndex' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["74"],"'serviceWorker' is defined but never used.","'Point' is defined but never used.",{"desc":"75","fix":"76"},"Update the dependencies array to be: [strokes]",{"range":"77","text":"78"},[2648,2662],"[strokes]"]